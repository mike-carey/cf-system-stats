---
resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((platform_automation_slug))
    product_version: ((platform_automation_version))

- name: code
  type: git
  source:
    url: ((code_url))
    branch: ((code_branch))
    private_key: ((code_private_key))

- name: code-dockerfile
  type: git
  source:
    url: ((code_url))
    branch: ((code_branch))
    private_key: ((code_private_key))

- name: code-src
  type: git
  source:
    url: ((code_url))
    branch: ((code_branch))
    private_key: ((code_private_key))
    paths:
      - src/*

.definitions:
  platform-automation-image: &platform-automation-image
    get: platform-automation
    params:
      unpack: true
      globs:
      - platform-automation-image-*.tgz
  platform-automation-tasks: &platform-automation-tasks
    get: platform-automation
    params:
      unpack: true
      globs:
      - platform-automation-tasks-*.zip

jobs:
- name: test-tasks
  plan:
  - aggregate:
    - get: code-src
      trigger: true
    - get: code
  - task: build-image
    file: code/ci/build.yml
    privileged: true
    params:
      CONTEXT: ci
  - task: test-scripts
    file: code/ci/test.yml
    image: unpacked-image
- name: generate-tasks
  plan:
  - aggregate:
    - get: code-src
      trigger: true
      passed:
      - test-tasks
    - get: code
    - <<: *platform-automation-image
    - <<: *platform-automation-tasks
  - task: generate-tasks
    file: code/ci/generate.yml
  - task: commit-tasks
    file: platform-automation-tasks/make-git-commit.yml
    input_mappings:
      repository: code
      file-source: generated-tasks
    params:
      FILE_SOURCE_PATH: .
      FILE_DESTINATION_PATH: tasks/
      COMMIT_MESSAGE: [BOT]: Regenerated task ymls
      GIT_AUTHOR_NAME: ((git_bot_username))
      GIT_AUTHOR_EMAIL: ((git_bot_email))
  - put: code
    params:
      repository: repository-commit
      rebase: true
