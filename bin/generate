#!/usr/bin/env bash

function generate() {
  local src=${SRCDIR:-src}
  local gen=${TASKSDIR:-tasks}

  local task_name="$1"
  if [[ "$task_name" == '-a' || "$task_name" == "--all" ]]; then
    shift
    for s in $src/*.sh; do
      t=$(basename $s .sh)
      echo "Generating $t"
      generate $t
    done

    return
  fi

  local script=$src/${task_name}.sh
  local yaml=$src/${task_name}.yml

  if [[ -z "$task_name" ]]; then
    echo "Usage:  $0 TASK_NAME" >&2
    return 1
  fi

  if [[ ! -f $script ]]; then
    echo "Missing task script: $script" >&2
    return 2
  fi

  if [[ ! -f $yaml ]]; then
    echo "Missing task yaml: $yaml" >&2
    return 3
  fi

  mkdir -p $gen

  local file=$gen/${task_name}.yml

  {
    echo "# This was auto-generated by: $0 $@"
    cat $yaml
    echo ""
    echo "# Generated"
    echo "run:"
    echo "  path: bash"
    echo "  args:"
    echo "  - -c"
    echo "  - |"
    echo "    set -eo pipefail"
    (source $script && declare -f $task_name | sed 's/^/    /g')
    echo "    $task_name"
  } > $file
}

if [[ ${BASH_SOURCE[0]} != $0 ]]; then
  echo "$0 cannot be sourced!" >&2
  exit 1
else
  set -euo pipefail

  generate "${@:-}"
  exit $?
fi
